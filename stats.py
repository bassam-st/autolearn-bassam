# ===========================
# ๐ AutoLearn Stats Viewer
# ูุนุฑุถ ุนุฏุฏ ุงููุณุชูุฏุงุช ูุงูููุงุทุน ูุงููุนุงุฑู ูุญุฌู ูุงุนุฏุฉ ุงูุจูุงูุงุช
# ===========================

import sqlite3, os

DB_PATH = "autolearn.db"   # ุบููุฑู ุฅุฐุง ูุงู ุงุณู ุงููุงุนุฏุฉ ูุฎุชูู ูู config.yaml

def main():
    if not os.path.exists(DB_PATH):
        print(f"โ ูุง ููุฌุฏ ููู ูุงุนุฏุฉ ุจูุงูุงุช: {DB_PATH}")
        print("ุดุบูู autolearn.py ุฃููุงู ููุชู ุฅูุดุงุคูุง.")
        return

    # ุญุฌู ุงูููู
    size_mb = os.path.getsize(DB_PATH) / (1024 * 1024)

    # ูุชุญ ุงููุงุนุฏุฉ ููุฑุงุกุฉ ุงูุฌุฏุงูู
    con = sqlite3.connect(DB_PATH)
    cur = con.cursor()
    stats = {}
    for t in ["docs", "chunks", "insights"]:
        try:
            count = cur.execute(f"SELECT COUNT(*) FROM {t}").fetchone()[0]
            stats[t] = count
        except Exception:
            stats[t] = "โ (ุงูุฌุฏูู ุบูุฑ ููุฌูุฏ ุจุนุฏ)"
    con.close()

    # ุนุฑุถ ุงููุชุงุฆุฌ
    print("========== ๐ AutoLearn Database Stats ==========")
    print(f"๐ฆ ุญุฌู ูุงุนุฏุฉ ุงูุจูุงูุงุช: {size_mb:.2f} MB\n")
    print(f"๐ ุงููุณุชูุฏุงุช (docs): {stats['docs']}")
    print(f"๐งฉ ุงูููุงุทุน (chunks): {stats['chunks']}")
    print(f"๐ก ุงููุนุงุฑู (insights): {stats['insights']}")
    print("===============================================")

if __name__ == "__main__":
    main()
